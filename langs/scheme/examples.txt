Hello World
********************************************************************************
(display "Hello world!")
********************************************************************************

Map and Fold
********************************************************************************
(fold-left * 1 (map + '(1 2 3) '(4 5 6)))
********************************************************************************

Input
********************************************************************************
(print 'Your #\\space 'name #\\space 'is #\\space (read) '!)
********************************************************************************

Naive Fibonacci
********************************************************************************
(define (fib n) (if (< n 2) n (+ (fib (- n 1)) (fib (- n 2)))))
(fib 9)
********************************************************************************

Simple Counter
********************************************************************************
(let loop ((n 1))
  (if (<= n 10)
    (begin
      (display n)(newline)
      (loop (+ n 1)))))
********************************************************************************

Y Combinator
********************************************************************************
(((lambda (f)
    ((lambda (proc) (f (lambda (arg) ((proc proc) arg))))
     (lambda (proc) (f (lambda (arg) ((proc proc) arg))))))
  (lambda (self)
    (lambda (ls)
      (if (null? ls) 0 (+ 1 (self (cdr ls)))))))
 '(1 2 3 4 5))
********************************************************************************
