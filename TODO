Look into jQuery Terminal (which is what the BiwaScheme site uses).
  A bit too heavy for our needs, but we could hack out the stuff we need.

Need some way to prevent infinite loops in the interpreters!
Need to prevent rich-text pasting into the prompt!

Examples
  Storing examples in JSON makes them super-ugly. Should find better way.
  How to load multi-command examples?
    As a session?
    As an editable block of text into a large textbox?

Input method
  Line by line with history / state?
    Great for learning and quick experimenting
    Natural, same as all standard REPLs
    State can be faked by keeping a history of commands
      On output discarding old results
      Assuming determinism
  Single Textbox
    No need to keep state
    Harder to quickly experiment
    Easier for pasting existing code
  Both?
    Switching mechanism?
      Grow automatically?
        Shift+Enter
        On unbalanced brackets/braces/parantheses
          May be problematic for some languages
        On paste/example load?
        Is that enough?

Persistence
  Download
    Session log.
    All entered commands as script
  Persistence
    Snippet-like URLs
    Accounts / profiles
      Probably too complex and not really needed

Design
  jsREPL Logo
  Color scheme
  Something to fill in the empty space on first load
    Examples?
    Faint logo?
    Something funny?
      Something funny yet subtle?
  Per-language help link

FUTURE
  External Access
    DOM
    XHR
  Sticky input
    Define a library-like bit of code to always load before anything else
      Per-command or per-session?
  Server side evaluation
    Security!
  Parse tree

********************************************************************************
*                                 Languages                                    *
********************************************************************************

Scheme
  http://www.biwascheme.org/

LISP
  http://kybernetikos.github.com/Javathcript/   <--- Suboptimal?
  http://www.parkscomputing.com/lisptest.html
  http://joeganley.com/code/jslisp.html
  http://stevela.github.com/js-lisp/
  http://www.ducklet.com/jisp/
  http://www.marcbelmont.com/lisp-interpreter-in-javascript-with-jquery

CoffeeScript
  http://jashkenas.github.com/coffee-script/

QBasic
  http://stevehanov.ca/blog/index.php?id=92

Ruby
  http://coderepos.org/share/wiki/JSRuby
  http://hotruby.yukoba.jp/

Bloop
  http://tim-ryan.com/labs/bloopjs/

Befunge
  http://www.quirkster.com/js/befunge.html

Brainfuck
  http://www.iamcal.com/misc/bf_debug/

Cat
  http://www.cat-language.com/interpreter.html

Forth
  http://wiki.forthfreak.net/index.cgi?jsforth

Haskell
  http://www.tinyrocket.se/2010/05/19/a-haskell-interpreter-in-javascript/

HQ9+
  http://safalra.com/programming/esoteric-languages/interpreters/hq9-plus/

Javascript
  https://github.com/mozilla/narcissus
    Includes new experimental JS harmony features, like object refelection and proxies.
    Check cross-browser compatibility.
    Probably really hard to use cross-browser, easy sandboxing could be done in iframe ^^
      Would it sandbox properly even if the iframe is on the same domain?
      How will we get the output?

Prolog
  http://ioctl.org/logic/prolog-latest

Applesoft BASIC
  http://www.calormen.com/applesoft/

6502-compatible Assembler
  http://www.6502asm.com/

Smalltalk
  http://silversmalltalk.wordpress.com/

Generic Algol-like languages
  http://www.zerny.dk/j-is-for-js.html
