********************************************************************************
*                               Current Tasks                                  *
********************************************************************************

Add Python engine
  amasad
  max99x

Version-tag lib/jq.hashchange.js and add link to original source
  amasad

********************************************************************************
*                               Brainstorming                                  *
********************************************************************************

Fix jqconsole
  Auto scroll on input (new lines)
  Auto indent new lines to match last line indent
  Language-based smart auto-indent

Clean up lib/console.js
  Both JSConsole and inspect() are globals
  Update version tag on change

Verify sandbox security
  No straightforward way to prevent access to window.top
    Maybe mess with getters

Show Brainfuck tape as REPL result
  Gives a reason to write Brainfuck in a REPL!

Ignore line continuation handler after empty line
  Provides a way to force an error if the user doesn't know why it continued

Add a "library" property to the language definition
  Repl.coffee will always load and run it after initializing an engine
  A little extra overhead by makes things neater
  Better let the language keep track and load the library by itself
    No messing with the UI callbacks
    Can be optimized better
  amasad prefers to have it controlled by $LAB and then delegated to the library
    max99x is not a fan of $LAB, but the way amasad did it looks fine
      Would still rather have plaintext libraries written in each language

Input method
  An expanded rich text editor for code snippets
    http://codemirror.net/
      Will open in a pop-up
        Pop-ups are so last decade!
        Try split screen
        Have it under the REPL terminal with an expand/minimize button
          Would minimize the terminal and expand the editor
          Should be resizable
          max99x feels this would be confusing
      How to handle execution?
        Go through the terminal?
        Go to a different Eval method, for instance EvalMulti?
    What about highlighting?
      CodeMirror is extensible - we can add languages that aren't supported

Persistence
  Download
    Session log
    All entered commands as script
  Persistence
    Snippet-like URLs
    Accounts / profiles
      Probably too complex and unnecessary
    Embed runnable jsREPL code snippets on sites/blogs
      Sounds impressive and should be reasonably easy
      Maybe an iframe or smart widget that would load only the chosen language

UI Design
  jsREPL logo
  Language logos
  Color scheme
    http://www.heroku.com/ is neat
  Something to fill in the empty space on first load
    Examples?
    Faint logo?
    Something funny?
      Something funny yet subtle?
  Language-specific help link
  Language-specific intro header?

Exotic Future Features
  External Access
    DOM
    XHR
    Canvas
      Having good canvas support could allow people to write games
      Or even port games that is written in a language we support
      Give them a way to share it (url shortener + result view)
  Server side evaluation
    Security!
    Performance hit due to latency
  Parse tree
  Embed as executable script
    We have VMs for many languages with the same interface
    We can create a standard DOM/XHR/Canvas API accessible from all languages
    A user can script their browser in any language on jsREPL
      Generate an includeable <script> for their page!
    Of course impractical for real projects, but some idiosyncratic fun!

Usage Patterns
  Trying out code while learning a language
  Linking to interactive solutions on sites like StackOverflow.com
  Access from mobile phones
  Prototyping
    Not complex enough so far

Porting
  Port to Node.js
    Make it accessible from terminal
    This would probably mean splitting the view and controller
      We should do that eventually anyway
  Port to Chrome app
  Port to Firefox extension

Marketing
  Target tutorial writers
  Post good StackOverflow answers with example links to jsREPL sessions
  Having a large collection of esoteric languages: can attract amateurs (good!)
  Contact people whose interpreters we use with a simple FYI
    They will probably spread the word

What language to use as the default?
  Javascript
    No libs required - instant load!
    People might quickly assume that only JS is supported - NOT what we want
  A language that makes you say "wow" when you see it in the browser
    QBasic is a good choice for that
  Let user select, then remember in a hash+cookie

Testing
  A standard set of examples that can be applied to all languages
  Some languages have their own set of tests - we can use them too

********************************************************************************
*                               More Languages                                 *
********************************************************************************


Javascript dialects
  JS.next
    http://code.google.com/p/traceur-compiler/
  JS11
    http://js11.org/
    Borderline useless
  Move
    http://movelang.org/
  Kaffeine
    http://weepy.github.com/kaffeine

Languages that people would only use out of nostalgia
  Applesoft BASIC
    http://www.calormen.com/applesoft/
  6502-compatible Assembler
    http://www.6502asm.com/
  Smalltalk
    http://silversmalltalk.wordpress.com/
    http://clamato.net/
    https://github.com/NicolasPetton/jtalk
  Forth
    http://wiki.forthfreak.net/index.cgi?jsforth

Serious languages
  Python
    http://code.google.com/p/skulpt/
    Emscripten
  Lua
    Emscripten
  LISP dialects
    sibilant
      https://github.com/jbr/sibilant
    Common
      https://github.com/mishoo/JCLS
    Generic
      http://kybernetikos.github.com/Javathcript/
        Currently used
      http://www.parkscomputing.com/lisptest.html
      http://joeganley.com/code/jslisp.html
      http://stevela.github.com/js-lisp/
      http://www.ducklet.com/jisp/
      http://www.marcbelmont.com/lisp-interpreter-in-javascript-with-jquery
      http://github.com/willurd/js-lisp
      https://github.com/akapav/js
  Ruby
    http://coderepos.org/share/wiki/JSRuby
    http://hotruby.yukoba.jp/
  Haskell
    http://www.tinyrocket.se/2010/05/19/a-haskell-interpreter-in-javascript/
      Seems rather unstable
        Not sure if this can be used at all
        At best we'll need to patch up a fair amount of stuff
          An opportunity to properly learn Haskell!
    http://code.google.com/p/jshaskell/
      Looks abandoned
  Prolog
    http://ioctl.org/logic/prolog-latest

Esoteric
  http://tim-ryan.com/labs/bloopjs/
  http://www.fordi.org/lulz/
  http://www.esolangs.org/wiki/Grin
  http://www.esolangs.org/wiki/Unlambda
  http://www.esolangs.org/wiki/BRZRK
  http://www.esolangs.org/wiki/Emoticon
  http://www.esolangs.org/wiki/Divzeros
  http://www.esolangs.org/wiki/Dd/dd
  http://www.esolangs.org/wiki/ContinuousEquation
  http://www.esolangs.org/wiki/Fob
  http://www.esolangs.org/wiki/Foo
  http://www.esolangs.org/wiki/GASOIL
  http://www.esolangs.org/wiki/Gibberish
  http://www.esolangs.org/wiki/SMITHb
  http://www.esolangs.org/wiki/Subleq
  http://www.esolangs.org/wiki/Underload
  http://www.esolangs.org/wiki/Var%27aq
  http://www.esolangs.org/wiki/Wheat
  http://www.esolangs.org/wiki/Thutu
  http://www.dangermouse.net/esoteric/zombie.html

Miscellaneous
  Cat
    http://www.cat-language.com/interpreter.html
  Generic Algol-like languages
    http://www.zerny.dk/j-is-for-js.html
  Compilers for JS with continuation extensions
    http://chumsley.org/jwacs/documentation.html
    http://neilmix.com/narrativejs/doc/index.html
